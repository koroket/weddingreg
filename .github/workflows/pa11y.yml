name: Pa11y Accessibility Testing

on: [push]

jobs:    
    pa11y:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout Code
              uses: actions/checkout@v1

            # - name: Start MongoDB As Docker
            #   uses: wbari/start-mongoDB@v0.2
            #   with:
            #       mongoDBVersion: 4.2

            - name: Read .nvmrc
              run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
              id: nvm

            - name: Cache
              uses: actions/cache@v1
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Setup Node
              uses: actions/setup-node@v1
              with:
                  node-version: "${{ steps.nvm.outputs.NVMRC }}"

            # - name: Install MongoDB
            #   run: |
            #     wget -qO - https://www.mongodb.org/static/pgp/server-3.6.asc | sudo apt-key add -
            #     echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.6         multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.6.list
            #     sudo apt-get update
            #     sudo apt-get install -y --allow-downgrades mongodb-org
            #     sudo apt-get install -y --allow-downgrades mongodb-org=3.6.14 mongodb-org-server=3.6.14        mongodb-org-shell=3.6.14 mongodb-org-mongos=3.6.14 mongodb-org-tools=3.6.14
            
            # - name: Start MongoDB
            #   run: sudo systemctl start mongod

            - name: Install Dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: npm install

            - name: Run Accessibility Tests
              env: 
                  DATABASE: ${{ secrets.DATABASE }}
              run: printenv
              # && ( node app.js > /dev/null 2>&1 & ) && sleep 5 && npm run test:accessibility
